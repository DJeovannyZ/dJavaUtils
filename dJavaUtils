#!/bin/bash

source /home/djeovanz/scriptsUtils/dJavaUtils/core/utils/fcHelp.sh
source /home/djeovanz/scriptsUtils/dJavaUtils/core/utils/fcPaths.sh
source /home/djeovanz/scriptsUtils/dJavaUtils/core/runProjects/runJava.sh
source /home/djeovanz/scriptsUtils/dJavaUtils/core/runProjects/deployJava.sh
source /home/djeovanz/scriptsUtils/dJavaUtils/core/createProjects/createWebApp.sh
source /home/djeovanz/scriptsUtils/dJavaUtils/core/createProjects/createMavenProject.sh
source /home/djeovanz/scriptsUtils/dJavaUtils/core/createProjects/createJavaFile.sh
defaultPath=$(cat "$HOME/.config/dJavaUtils/default_path.txt")


function injectDependencies() {
    # obtener ruta absoluta del proyecto
    projectPath=$(realpath "$1")
    # Ejecutar el comando 'mvn dependency:copy-dependencies' en la raíz del proyecto para descargar las dependencias
    mvn dependency:copy-dependencies -DoutputDirectory="$projectPath/target/dependency" -f "$projectPath/pom.xml"
    cd "$projectPath"
    mvn eclipse:eclipse
}


main() {
  # Call checkDefaultPath only if not called with setDefaultPath option
  if [ "$1" != "--setDefaultPath" ] && [ "$1" != "-s" ]; then
    checkDefaultPath
  fi
  clear
  # Check if no arguments are passed
  if [ $# -eq 0 ]; then
      showHelp
  fi
    case "$1" in
        --runJava | -rj)
            runJava "$2"
            ;;
        --deployJava | -dj)
            deployJava "$2"
            ;;
        --createMavenProject | -cm)
            createMavenProject
            ;;
        --setDefaultPath | -s)
            setDefaultPath "$2"
            ;;
        --injectDependencies | -id)
            if [ -d "$2" ]; then
                injectDependencies "$2"
            else
                echo "Error: $2 no es un directorio válido"
            fi
            ;;
        --help | -h)
            showHelp
            ;;
    esac
}

main "$@"
